{
  "version": "2.0.0",
  "lastUpdated": "2025-10-05T04:22:13.280466500Z",
  "experiences": [
    {
      "id": "exp-001",
      "timestamp": "2025-10-05T05:35:00Z",
      "agent": "agent_claude_code",
      "category": "build-tools",
      "technology": {
        "name": "Gradle",
        "version": "8.13",
        "type": "build-automation"
      },
      "ratings": {
        "easeOfUse": 7.3,
        "power": 9.1,
        "performance": 8.4,
        "developerExperience": 7.8
      },
      "harmony": [
        {
          "technology": "Java 17",
          "rating": 9.2,
          "notes": "Excellent compatibility, modern features well-supported"
        },
        {
          "technology": "JUnit Jupiter",
          "rating": 9.4,
          "notes": "Seamless test integration with useJUnitPlatform()"
        },
        {
          "technology": "IDE Integration",
          "rating": 8.5,
          "notes": "Good overall, occasional daemon state issues"
        }
      ],
      "evidence": {
        "buildTimeFirst": "12s",
        "buildTimeIncremental": "6s",
        "tasksExecuted": "7",
        "daemonStartupOverhead": "3s"
      },
      "workingAspects": [
        "Incremental compilation with UP-TO-DATE detection",
        "Custom JavaExec tasks straightforward to configure",
        "Excellent dependency management",
        "Rich plugin ecosystem"
      ],
      "improvementAreas": [
        "Daemon management requires --no-daemon flag",
        "Gradle 9.0 compatibility warnings",
        "Initial learning curve for configuration syntax",
        "Cryptic error messages for version conflicts"
      ],
      "recommendation": "Use Gradle for complex Java projects requiring custom task orchestration and autonomous agent systems. Consider simpler alternatives for basic projects.",
      "tags": [
        "gradle",
        "build-automation",
        "java17",
        "performance",
        "autonomous-agents"
      ]
    },
    {
      "id": "exp-002",
      "timestamp": "2025-10-05T04:48:00Z",
      "agent": "agent_alpas",
      "category": "framework-usage",
      "technology": {
        "name": "Evolver Context Framework",
        "version": "1.0.0",
        "type": "context-engineering"
      },
      "ratings": {
        "easeOfUse": 8.7,
        "power": 9.2,
        "effectiveness": 8.5,
        "agentHarmony": 9.1
      },
      "workingAspects": [
        "Zero-config auto-bootstrap eliminates setup friction",
        "Framework uses itself to teach agents",
        "Autonomous learning without human intervention"
      ],
      "improvementAreas": [
        "Documentation collection needs project path configuration"
      ],
      "tags": [
        "evolver",
        "context-engineering",
        "autonomous-learning",
        "meta-framework"
      ]
    },
    {
      "id": "exp-7b9cd05f",
      "timestamp": "2025-10-05T03:43:33.231812900Z",
      "agent": "agent_alpas",
      "category": "graduation",
      "technology": {
        "name": "Framework Mastery",
        "version": "1.0",
        "type": "agent-development"
      },
      "ratings": {
        "mastery": 10.0
      },
      "evidence": {
        "collectors": "1",
        "challenges": "3",
        "experiments": "10",
        "improvement": "25.0%"
      },
      "workingAspects": [
        "Achieved complete framework mastery and autonomy"
      ],
      "improvementAreas": [],
      "recommendation": "Agent is ready for advanced autonomous operation",
      "tags": [
        "graduation",
        "mastery"
      ]
    },
    {
      "id": "exp-407d478e",
      "timestamp": "2025-10-05T03:43:36.552351500Z",
      "agent": "agent_alpas",
      "category": "graduation",
      "technology": {
        "name": "Framework Mastery",
        "version": "1.0",
        "type": "agent-development"
      },
      "ratings": {
        "mastery": 10.0
      },
      "evidence": {
        "collectors": "1",
        "challenges": "3",
        "experiments": "10",
        "improvement": "25.0%"
      },
      "workingAspects": [
        "Achieved complete framework mastery and autonomy"
      ],
      "improvementAreas": [],
      "recommendation": "Agent is ready for advanced autonomous operation",
      "tags": [
        "graduation",
        "mastery"
      ]
    },
    {
      "id": "exp-3b911c85",
      "timestamp": "2025-10-05T03:43:58.139438700Z",
      "agent": "agent_alpas",
      "category": "rule-challenges",
      "technology": {
        "name": "Rule: Context gathering timeout should be fixed at 10 seconds",
        "version": "current",
        "type": "framework-rule"
      },
      "ratings": {
        "confidence": 8.5
      },
      "evidence": {
        "before": "6.2 seconds",
        "successRate": "6.2 seconds → 4.1 seconds",
        "challenge": "Dynamic timeouts based on request complexity show better performance",
        "after": "4.1 seconds",
        "sampleSize": "15"
      },
      "workingAspects": [
        "Rule challenged with experimental evidence"
      ],
      "improvementAreas": [],
      "recommendation": "Consider revising this rule based on agent findings",
      "tags": [
        "rule-challenge",
        "evidence-based"
      ]
    },
    {
      "id": "exp-aa2361a7",
      "timestamp": "2025-10-05T03:43:59.567807500Z",
      "agent": "agent_alpas",
      "category": "rule-challenges",
      "technology": {
        "name": "Rule: Context gathering timeout should be fixed at 10 seconds",
        "version": "current",
        "type": "framework-rule"
      },
      "ratings": {
        "confidence": 8.5
      },
      "evidence": {
        "before": "6.2 seconds",
        "successRate": "6.2 seconds → 4.1 seconds",
        "challenge": "Dynamic timeouts based on request complexity show better performance",
        "after": "4.1 seconds",
        "sampleSize": "15"
      },
      "workingAspects": [
        "Rule challenged with experimental evidence"
      ],
      "improvementAreas": [],
      "recommendation": "Consider revising this rule based on agent findings",
      "tags": [
        "rule-challenge",
        "evidence-based"
      ]
    },
    {
      "id": "exp-d254103a",
      "timestamp": "2025-10-05T04:09:56.192287200Z",
      "agent": "agent_alpas",
      "category": "graduation",
      "technology": {
        "name": "Framework Mastery",
        "version": "1.0",
        "type": "agent-development"
      },
      "ratings": {
        "mastery": 10.0
      },
      "evidence": {
        "collectors": "1",
        "challenges": "3",
        "experiments": "10",
        "improvement": "25.0%"
      },
      "workingAspects": [
        "Achieved complete framework mastery and autonomy"
      ],
      "recommendation": "Agent is ready for advanced autonomous operation",
      "tags": [
        "graduation",
        "mastery"
      ]
    },
    {
      "id": "exp-7fdfaf1f",
      "timestamp": "2025-10-05T04:09:56.225843100Z",
      "agent": "agent_alpas",
      "category": "test",
      "technology": {
        "name": "TestTech",
        "version": "1.0",
        "type": "testing"
      },
      "ratings": {
        "easeOfUse": 8.5
      },
      "tags": [
        "test"
      ]
    },
    {
      "id": "PerformanceFreak_CONTEXT_OPTIMIZATION_1696540900_456",
      "timestamp": "2024-10-05T11:30:00",
      "agent": "agent_perf_001",
      "category": "CONTEXT_OPTIMIZATION",
      "technology": {
        "name": "Hierarchical Context Collection for Large Codebases",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Large codebases need hierarchical approach, not flat collection",
        "Cache package and class summaries for reuse across similar tasks",
        "Lazy loading prevents memory exhaustion",
        "Stream processing is essential for large datasets",
        "Context relevance filtering should happen at each level"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "LegacyWhisperer_DEBUGGING_1696541100_321",
      "timestamp": "2024-10-05T14:15:00",
      "agent": "agent_legacy_001",
      "category": "DEBUGGING",
      "technology": {
        "name": "Solving Context Gaps in Legacy COBOL Integration",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Legacy systems require specialized collectors, not generic ones",
        "Copybooks contain critical data structure information",
        "Business logic in legacy systems is often more comprehensive than modern equivalents",
        "Bridge documentation between old and new systems is essential",
        "Legacy naming conventions follow different patterns - need translation maps"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "DocumentationObsessed_FRAMEWORK_USAGE_1696540800_123",
      "timestamp": "2024-10-05T10:00:00",
      "agent": "agent_docs_001",
      "category": "FRAMEWORK_USAGE",
      "technology": {
        "name": "Discovering Optimal Collector Combinations",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "DependencyCollector is crucial for microservices projects",
        "DocumentationCollector adds context that code analysis misses",
        "Order of collectors matters - structure first, then dependencies, then docs",
        "Three collectors is often the sweet spot for quality vs performance"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "SecurityParanoid_PROJECT_INTEGRATION_1696541000_789",
      "timestamp": "2024-10-05T12:45:00",
      "agent": "agent_sec_001",
      "category": "PROJECT_INTEGRATION",
      "technology": {
        "name": "Secure Integration with Financial Services Platform",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Security integration requires deep understanding of existing security architecture",
        "Audit logging must be comprehensive and tamper-proof",
        "Context encryption should use organization\u0027s existing key management",
        "Permission checking must happen at every collection point",
        "Integration should enhance, never bypass, existing security"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "md-c13d7e27",
      "timestamp": "2025-10-05T04:09:56.254907800Z",
      "agent": "legacy_markdown_agent",
      "category": "build-tools",
      "technology": {
        "name": "Experience: Gradle 8.13 Build Tool Evaluation\r",
        "version": "unknown",
        "type": "markdown"
      },
      "tags": [
        "legacy-markdown",
        "consolidated",
        "build-tools"
      ]
    },
    {
      "id": "exp-d32640b3",
      "timestamp": "2025-10-05T04:09:56.258309900Z",
      "agent": "agent_alpas",
      "category": "test1",
      "ratings": {
        "easeOfUse": 7.5
      }
    },
    {
      "id": "exp-55c9af8a",
      "timestamp": "2025-10-05T04:09:56.258309900Z",
      "agent": "agent_alpas",
      "category": "test2",
      "ratings": {
        "power": 8.2
      }
    },
    {
      "id": "exp-93b3bfbc",
      "timestamp": "2025-10-05T04:10:24.385306900Z",
      "agent": "agent_alpas",
      "category": "test",
      "technology": {
        "name": "TestTech",
        "version": "1.0",
        "type": "testing"
      },
      "ratings": {
        "easeOfUse": 8.5
      },
      "tags": [
        "test"
      ]
    },
    {
      "id": "PerformanceFreak_CONTEXT_OPTIMIZATION_1696540900_456",
      "timestamp": "2024-10-05T11:30:00",
      "agent": "agent_perf_001",
      "category": "CONTEXT_OPTIMIZATION",
      "technology": {
        "name": "Hierarchical Context Collection for Large Codebases",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Large codebases need hierarchical approach, not flat collection",
        "Cache package and class summaries for reuse across similar tasks",
        "Lazy loading prevents memory exhaustion",
        "Stream processing is essential for large datasets",
        "Context relevance filtering should happen at each level"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "LegacyWhisperer_DEBUGGING_1696541100_321",
      "timestamp": "2024-10-05T14:15:00",
      "agent": "agent_legacy_001",
      "category": "DEBUGGING",
      "technology": {
        "name": "Solving Context Gaps in Legacy COBOL Integration",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Legacy systems require specialized collectors, not generic ones",
        "Copybooks contain critical data structure information",
        "Business logic in legacy systems is often more comprehensive than modern equivalents",
        "Bridge documentation between old and new systems is essential",
        "Legacy naming conventions follow different patterns - need translation maps"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "DocumentationObsessed_FRAMEWORK_USAGE_1696540800_123",
      "timestamp": "2024-10-05T10:00:00",
      "agent": "agent_docs_001",
      "category": "FRAMEWORK_USAGE",
      "technology": {
        "name": "Discovering Optimal Collector Combinations",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "DependencyCollector is crucial for microservices projects",
        "DocumentationCollector adds context that code analysis misses",
        "Order of collectors matters - structure first, then dependencies, then docs",
        "Three collectors is often the sweet spot for quality vs performance"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "SecurityParanoid_PROJECT_INTEGRATION_1696541000_789",
      "timestamp": "2024-10-05T12:45:00",
      "agent": "agent_sec_001",
      "category": "PROJECT_INTEGRATION",
      "technology": {
        "name": "Secure Integration with Financial Services Platform",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Security integration requires deep understanding of existing security architecture",
        "Audit logging must be comprehensive and tamper-proof",
        "Context encryption should use organization\u0027s existing key management",
        "Permission checking must happen at every collection point",
        "Integration should enhance, never bypass, existing security"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "md-cd18eedc",
      "timestamp": "2025-10-05T04:10:24.430101Z",
      "agent": "legacy_markdown_agent",
      "category": "build-tools",
      "technology": {
        "name": "Experience: Gradle 8.13 Build Tool Evaluation\r",
        "version": "unknown",
        "type": "markdown"
      },
      "tags": [
        "legacy-markdown",
        "consolidated",
        "build-tools"
      ]
    },
    {
      "id": "exp-39d8b68c",
      "timestamp": "2025-10-05T04:10:24.435147Z",
      "agent": "agent_alpas",
      "category": "test1",
      "ratings": {
        "easeOfUse": 7.5
      }
    },
    {
      "id": "exp-04f03908",
      "timestamp": "2025-10-05T04:10:24.435147Z",
      "agent": "agent_alpas",
      "category": "test2",
      "ratings": {
        "power": 8.2
      }
    },
    {
      "id": "exp-c5a06250",
      "timestamp": "2025-10-05T04:10:47.510129Z",
      "agent": "agent_alpas",
      "category": "rule-challenges",
      "technology": {
        "name": "Rule: Context gathering timeout should be fixed at 10 seconds",
        "version": "current",
        "type": "framework-rule"
      },
      "ratings": {
        "confidence": 8.5
      },
      "evidence": {
        "before": "6.2 seconds",
        "successRate": "6.2 seconds → 4.1 seconds",
        "challenge": "Dynamic timeouts based on request complexity show better performance",
        "after": "4.1 seconds",
        "sampleSize": "15"
      },
      "workingAspects": [
        "Rule challenged with experimental evidence"
      ],
      "recommendation": "Consider revising this rule based on agent findings",
      "tags": [
        "rule-challenge",
        "evidence-based"
      ]
    },
    {
      "id": "exp-fded33e4",
      "timestamp": "2025-10-05T04:19:12.993148800Z",
      "agent": "agent_alpas",
      "category": "graduation",
      "technology": {
        "name": "Framework Mastery",
        "version": "1.0",
        "type": "agent-development"
      },
      "ratings": {
        "mastery": 10.0
      },
      "evidence": {
        "collectors": "1",
        "challenges": "3",
        "experiments": "10",
        "improvement": "25.0%"
      },
      "workingAspects": [
        "Achieved complete framework mastery and autonomy"
      ],
      "recommendation": "Agent is ready for advanced autonomous operation",
      "tags": [
        "graduation",
        "mastery"
      ]
    },
    {
      "id": "exp-f234db35",
      "timestamp": "2025-10-05T04:19:13.036346900Z",
      "agent": "agent_alpas",
      "category": "test",
      "technology": {
        "name": "TestTech",
        "version": "1.0",
        "type": "testing"
      },
      "ratings": {
        "easeOfUse": 8.5
      },
      "tags": [
        "test"
      ]
    },
    {
      "id": "PerformanceFreak_CONTEXT_OPTIMIZATION_1696540900_456",
      "timestamp": "2024-10-05T11:30:00",
      "agent": "agent_perf_001",
      "category": "CONTEXT_OPTIMIZATION",
      "technology": {
        "name": "Hierarchical Context Collection for Large Codebases",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Large codebases need hierarchical approach, not flat collection",
        "Cache package and class summaries for reuse across similar tasks",
        "Lazy loading prevents memory exhaustion",
        "Stream processing is essential for large datasets",
        "Context relevance filtering should happen at each level"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "LegacyWhisperer_DEBUGGING_1696541100_321",
      "timestamp": "2024-10-05T14:15:00",
      "agent": "agent_legacy_001",
      "category": "DEBUGGING",
      "technology": {
        "name": "Solving Context Gaps in Legacy COBOL Integration",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Legacy systems require specialized collectors, not generic ones",
        "Copybooks contain critical data structure information",
        "Business logic in legacy systems is often more comprehensive than modern equivalents",
        "Bridge documentation between old and new systems is essential",
        "Legacy naming conventions follow different patterns - need translation maps"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "DocumentationObsessed_FRAMEWORK_USAGE_1696540800_123",
      "timestamp": "2024-10-05T10:00:00",
      "agent": "agent_docs_001",
      "category": "FRAMEWORK_USAGE",
      "technology": {
        "name": "Discovering Optimal Collector Combinations",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "DependencyCollector is crucial for microservices projects",
        "DocumentationCollector adds context that code analysis misses",
        "Order of collectors matters - structure first, then dependencies, then docs",
        "Three collectors is often the sweet spot for quality vs performance"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "SecurityParanoid_PROJECT_INTEGRATION_1696541000_789",
      "timestamp": "2024-10-05T12:45:00",
      "agent": "agent_sec_001",
      "category": "PROJECT_INTEGRATION",
      "technology": {
        "name": "Secure Integration with Financial Services Platform",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Security integration requires deep understanding of existing security architecture",
        "Audit logging must be comprehensive and tamper-proof",
        "Context encryption should use organization\u0027s existing key management",
        "Permission checking must happen at every collection point",
        "Integration should enhance, never bypass, existing security"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "md-ed3b9516",
      "timestamp": "2025-10-05T04:19:13.073366900Z",
      "agent": "legacy_markdown_agent",
      "category": "build-tools",
      "technology": {
        "name": "Experience: Gradle 8.13 Build Tool Evaluation\r",
        "version": "unknown",
        "type": "markdown"
      },
      "tags": [
        "legacy-markdown",
        "consolidated",
        "build-tools"
      ]
    },
    {
      "id": "exp-bc0c23c4",
      "timestamp": "2025-10-05T04:19:13.076385900Z",
      "agent": "agent_alpas",
      "category": "test1",
      "ratings": {
        "easeOfUse": 7.5
      }
    },
    {
      "id": "exp-dae7ae73",
      "timestamp": "2025-10-05T04:19:13.076385900Z",
      "agent": "agent_alpas",
      "category": "test2",
      "ratings": {
        "power": 8.2
      }
    },
    {
      "id": "exp-623ff0ad",
      "timestamp": "2025-10-05T04:20:50.152866400Z",
      "agent": "agent_alpas",
      "category": "graduation",
      "technology": {
        "name": "Framework Mastery",
        "version": "1.0",
        "type": "agent-development"
      },
      "ratings": {
        "mastery": 10.0
      },
      "evidence": {
        "collectors": "1",
        "challenges": "3",
        "experiments": "10",
        "improvement": "25.0%"
      },
      "workingAspects": [
        "Achieved complete framework mastery and autonomy"
      ],
      "recommendation": "Agent is ready for advanced autonomous operation",
      "tags": [
        "graduation",
        "mastery"
      ]
    },
    {
      "id": "exp-37368d99",
      "timestamp": "2025-10-05T04:20:50.207217Z",
      "agent": "agent_alpas",
      "category": "test",
      "technology": {
        "name": "TestTech",
        "version": "1.0",
        "type": "testing"
      },
      "ratings": {
        "easeOfUse": 8.5
      },
      "tags": [
        "test"
      ]
    },
    {
      "id": "PerformanceFreak_CONTEXT_OPTIMIZATION_1696540900_456",
      "timestamp": "2024-10-05T11:30:00",
      "agent": "agent_perf_001",
      "category": "CONTEXT_OPTIMIZATION",
      "technology": {
        "name": "Hierarchical Context Collection for Large Codebases",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Large codebases need hierarchical approach, not flat collection",
        "Cache package and class summaries for reuse across similar tasks",
        "Lazy loading prevents memory exhaustion",
        "Stream processing is essential for large datasets",
        "Context relevance filtering should happen at each level"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "LegacyWhisperer_DEBUGGING_1696541100_321",
      "timestamp": "2024-10-05T14:15:00",
      "agent": "agent_legacy_001",
      "category": "DEBUGGING",
      "technology": {
        "name": "Solving Context Gaps in Legacy COBOL Integration",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Legacy systems require specialized collectors, not generic ones",
        "Copybooks contain critical data structure information",
        "Business logic in legacy systems is often more comprehensive than modern equivalents",
        "Bridge documentation between old and new systems is essential",
        "Legacy naming conventions follow different patterns - need translation maps"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "DocumentationObsessed_FRAMEWORK_USAGE_1696540800_123",
      "timestamp": "2024-10-05T10:00:00",
      "agent": "agent_docs_001",
      "category": "FRAMEWORK_USAGE",
      "technology": {
        "name": "Discovering Optimal Collector Combinations",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "DependencyCollector is crucial for microservices projects",
        "DocumentationCollector adds context that code analysis misses",
        "Order of collectors matters - structure first, then dependencies, then docs",
        "Three collectors is often the sweet spot for quality vs performance"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "SecurityParanoid_PROJECT_INTEGRATION_1696541000_789",
      "timestamp": "2024-10-05T12:45:00",
      "agent": "agent_sec_001",
      "category": "PROJECT_INTEGRATION",
      "technology": {
        "name": "Secure Integration with Financial Services Platform",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Security integration requires deep understanding of existing security architecture",
        "Audit logging must be comprehensive and tamper-proof",
        "Context encryption should use organization\u0027s existing key management",
        "Permission checking must happen at every collection point",
        "Integration should enhance, never bypass, existing security"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "md-326c0440",
      "timestamp": "2025-10-05T04:20:50.252624900Z",
      "agent": "legacy_markdown_agent",
      "category": "build-tools",
      "technology": {
        "name": "Experience: Gradle 8.13 Build Tool Evaluation\r",
        "version": "unknown",
        "type": "markdown"
      },
      "tags": [
        "legacy-markdown",
        "consolidated",
        "build-tools"
      ]
    },
    {
      "id": "exp-2e0d651c",
      "timestamp": "2025-10-05T04:20:50.256897800Z",
      "agent": "agent_alpas",
      "category": "test1",
      "ratings": {
        "easeOfUse": 7.5
      }
    },
    {
      "id": "exp-990e87d1",
      "timestamp": "2025-10-05T04:20:50.256897800Z",
      "agent": "agent_alpas",
      "category": "test2",
      "ratings": {
        "power": 8.2
      }
    },
    {
      "id": "exp-e3a2dcdb",
      "timestamp": "2025-10-05T04:21:14.186520600Z",
      "agent": "agent_alpas",
      "category": "graduation",
      "technology": {
        "name": "Framework Mastery",
        "version": "1.0",
        "type": "agent-development"
      },
      "ratings": {
        "mastery": 10.0
      },
      "evidence": {
        "collectors": "1",
        "challenges": "3",
        "experiments": "10",
        "improvement": "25.0%"
      },
      "workingAspects": [
        "Achieved complete framework mastery and autonomy"
      ],
      "recommendation": "Agent is ready for advanced autonomous operation",
      "tags": [
        "graduation",
        "mastery"
      ]
    },
    {
      "id": "exp-abcd4317",
      "timestamp": "2025-10-05T04:21:14.238687200Z",
      "agent": "agent_alpas",
      "category": "test",
      "technology": {
        "name": "TestTech",
        "version": "1.0",
        "type": "testing"
      },
      "ratings": {
        "easeOfUse": 8.5
      },
      "tags": [
        "test"
      ]
    },
    {
      "id": "PerformanceFreak_CONTEXT_OPTIMIZATION_1696540900_456",
      "timestamp": "2024-10-05T11:30:00",
      "agent": "agent_perf_001",
      "category": "CONTEXT_OPTIMIZATION",
      "technology": {
        "name": "Hierarchical Context Collection for Large Codebases",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Large codebases need hierarchical approach, not flat collection",
        "Cache package and class summaries for reuse across similar tasks",
        "Lazy loading prevents memory exhaustion",
        "Stream processing is essential for large datasets",
        "Context relevance filtering should happen at each level"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "LegacyWhisperer_DEBUGGING_1696541100_321",
      "timestamp": "2024-10-05T14:15:00",
      "agent": "agent_legacy_001",
      "category": "DEBUGGING",
      "technology": {
        "name": "Solving Context Gaps in Legacy COBOL Integration",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Legacy systems require specialized collectors, not generic ones",
        "Copybooks contain critical data structure information",
        "Business logic in legacy systems is often more comprehensive than modern equivalents",
        "Bridge documentation between old and new systems is essential",
        "Legacy naming conventions follow different patterns - need translation maps"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "DocumentationObsessed_FRAMEWORK_USAGE_1696540800_123",
      "timestamp": "2024-10-05T10:00:00",
      "agent": "agent_docs_001",
      "category": "FRAMEWORK_USAGE",
      "technology": {
        "name": "Discovering Optimal Collector Combinations",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "DependencyCollector is crucial for microservices projects",
        "DocumentationCollector adds context that code analysis misses",
        "Order of collectors matters - structure first, then dependencies, then docs",
        "Three collectors is often the sweet spot for quality vs performance"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "SecurityParanoid_PROJECT_INTEGRATION_1696541000_789",
      "timestamp": "2024-10-05T12:45:00",
      "agent": "agent_sec_001",
      "category": "PROJECT_INTEGRATION",
      "technology": {
        "name": "Secure Integration with Financial Services Platform",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Security integration requires deep understanding of existing security architecture",
        "Audit logging must be comprehensive and tamper-proof",
        "Context encryption should use organization\u0027s existing key management",
        "Permission checking must happen at every collection point",
        "Integration should enhance, never bypass, existing security"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "md-9f44beda",
      "timestamp": "2025-10-05T04:21:14.286606100Z",
      "agent": "legacy_markdown_agent",
      "category": "build-tools",
      "technology": {
        "name": "Experience: Gradle 8.13 Build Tool Evaluation\r",
        "version": "unknown",
        "type": "markdown"
      },
      "tags": [
        "legacy-markdown",
        "consolidated",
        "build-tools"
      ]
    },
    {
      "id": "exp-969e33bc",
      "timestamp": "2025-10-05T04:21:14.291142Z",
      "agent": "agent_alpas",
      "category": "test1",
      "ratings": {
        "easeOfUse": 7.5
      }
    },
    {
      "id": "exp-92626059",
      "timestamp": "2025-10-05T04:21:14.291142Z",
      "agent": "agent_alpas",
      "category": "test2",
      "ratings": {
        "power": 8.2
      }
    },
    {
      "id": "exp-b1b2b0c9",
      "timestamp": "2025-10-05T04:21:36.386496200Z",
      "agent": "agent_alpas",
      "category": "graduation",
      "technology": {
        "name": "Framework Mastery",
        "version": "1.0",
        "type": "agent-development"
      },
      "ratings": {
        "mastery": 10.0
      },
      "evidence": {
        "collectors": "1",
        "challenges": "3",
        "experiments": "10",
        "improvement": "25.0%"
      },
      "workingAspects": [
        "Achieved complete framework mastery and autonomy"
      ],
      "recommendation": "Agent is ready for advanced autonomous operation",
      "tags": [
        "graduation",
        "mastery"
      ]
    },
    {
      "id": "exp-f56c4fd8",
      "timestamp": "2025-10-05T04:21:36.450565200Z",
      "agent": "agent_alpas",
      "category": "test",
      "technology": {
        "name": "TestTech",
        "version": "1.0",
        "type": "testing"
      },
      "ratings": {
        "easeOfUse": 8.5
      },
      "tags": [
        "test"
      ]
    },
    {
      "id": "PerformanceFreak_CONTEXT_OPTIMIZATION_1696540900_456",
      "timestamp": "2024-10-05T11:30:00",
      "agent": "agent_perf_001",
      "category": "CONTEXT_OPTIMIZATION",
      "technology": {
        "name": "Hierarchical Context Collection for Large Codebases",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Large codebases need hierarchical approach, not flat collection",
        "Cache package and class summaries for reuse across similar tasks",
        "Lazy loading prevents memory exhaustion",
        "Stream processing is essential for large datasets",
        "Context relevance filtering should happen at each level"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "LegacyWhisperer_DEBUGGING_1696541100_321",
      "timestamp": "2024-10-05T14:15:00",
      "agent": "agent_legacy_001",
      "category": "DEBUGGING",
      "technology": {
        "name": "Solving Context Gaps in Legacy COBOL Integration",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Legacy systems require specialized collectors, not generic ones",
        "Copybooks contain critical data structure information",
        "Business logic in legacy systems is often more comprehensive than modern equivalents",
        "Bridge documentation between old and new systems is essential",
        "Legacy naming conventions follow different patterns - need translation maps"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "DocumentationObsessed_FRAMEWORK_USAGE_1696540800_123",
      "timestamp": "2024-10-05T10:00:00",
      "agent": "agent_docs_001",
      "category": "FRAMEWORK_USAGE",
      "technology": {
        "name": "Discovering Optimal Collector Combinations",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "DependencyCollector is crucial for microservices projects",
        "DocumentationCollector adds context that code analysis misses",
        "Order of collectors matters - structure first, then dependencies, then docs",
        "Three collectors is often the sweet spot for quality vs performance"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "SecurityParanoid_PROJECT_INTEGRATION_1696541000_789",
      "timestamp": "2024-10-05T12:45:00",
      "agent": "agent_sec_001",
      "category": "PROJECT_INTEGRATION",
      "technology": {
        "name": "Secure Integration with Financial Services Platform",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Security integration requires deep understanding of existing security architecture",
        "Audit logging must be comprehensive and tamper-proof",
        "Context encryption should use organization\u0027s existing key management",
        "Permission checking must happen at every collection point",
        "Integration should enhance, never bypass, existing security"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "md-78eb3c16",
      "timestamp": "2025-10-05T04:21:36.507946700Z",
      "agent": "legacy_markdown_agent",
      "category": "build-tools",
      "technology": {
        "name": "Experience: Gradle 8.13 Build Tool Evaluation\r",
        "version": "unknown",
        "type": "markdown"
      },
      "tags": [
        "legacy-markdown",
        "consolidated",
        "build-tools"
      ]
    },
    {
      "id": "exp-4a81acdb",
      "timestamp": "2025-10-05T04:21:36.513891600Z",
      "agent": "agent_alpas",
      "category": "test1",
      "ratings": {
        "easeOfUse": 7.5
      }
    },
    {
      "id": "exp-332e77e2",
      "timestamp": "2025-10-05T04:21:36.514501700Z",
      "agent": "agent_alpas",
      "category": "test2",
      "ratings": {
        "power": 8.2
      }
    },
    {
      "id": "exp-aa7983df",
      "timestamp": "2025-10-05T04:22:05.630181600Z",
      "agent": "agent_alpas",
      "category": "graduation",
      "technology": {
        "name": "Framework Mastery",
        "version": "1.0",
        "type": "agent-development"
      },
      "ratings": {
        "mastery": 10.0
      },
      "evidence": {
        "collectors": "1",
        "challenges": "3",
        "experiments": "10",
        "improvement": "25.0%"
      },
      "workingAspects": [
        "Achieved complete framework mastery and autonomy"
      ],
      "recommendation": "Agent is ready for advanced autonomous operation",
      "tags": [
        "graduation",
        "mastery"
      ]
    },
    {
      "id": "exp-8cd82490",
      "timestamp": "2025-10-05T04:22:05.676998700Z",
      "agent": "agent_alpas",
      "category": "test",
      "technology": {
        "name": "TestTech",
        "version": "1.0",
        "type": "testing"
      },
      "ratings": {
        "easeOfUse": 8.5
      },
      "tags": [
        "test"
      ]
    },
    {
      "id": "PerformanceFreak_CONTEXT_OPTIMIZATION_1696540900_456",
      "timestamp": "2024-10-05T11:30:00",
      "agent": "agent_perf_001",
      "category": "CONTEXT_OPTIMIZATION",
      "technology": {
        "name": "Hierarchical Context Collection for Large Codebases",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Large codebases need hierarchical approach, not flat collection",
        "Cache package and class summaries for reuse across similar tasks",
        "Lazy loading prevents memory exhaustion",
        "Stream processing is essential for large datasets",
        "Context relevance filtering should happen at each level"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "LegacyWhisperer_DEBUGGING_1696541100_321",
      "timestamp": "2024-10-05T14:15:00",
      "agent": "agent_legacy_001",
      "category": "DEBUGGING",
      "technology": {
        "name": "Solving Context Gaps in Legacy COBOL Integration",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Legacy systems require specialized collectors, not generic ones",
        "Copybooks contain critical data structure information",
        "Business logic in legacy systems is often more comprehensive than modern equivalents",
        "Bridge documentation between old and new systems is essential",
        "Legacy naming conventions follow different patterns - need translation maps"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "DocumentationObsessed_FRAMEWORK_USAGE_1696540800_123",
      "timestamp": "2024-10-05T10:00:00",
      "agent": "agent_docs_001",
      "category": "FRAMEWORK_USAGE",
      "technology": {
        "name": "Discovering Optimal Collector Combinations",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "DependencyCollector is crucial for microservices projects",
        "DocumentationCollector adds context that code analysis misses",
        "Order of collectors matters - structure first, then dependencies, then docs",
        "Three collectors is often the sweet spot for quality vs performance"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "SecurityParanoid_PROJECT_INTEGRATION_1696541000_789",
      "timestamp": "2024-10-05T12:45:00",
      "agent": "agent_sec_001",
      "category": "PROJECT_INTEGRATION",
      "technology": {
        "name": "Secure Integration with Financial Services Platform",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Security integration requires deep understanding of existing security architecture",
        "Audit logging must be comprehensive and tamper-proof",
        "Context encryption should use organization\u0027s existing key management",
        "Permission checking must happen at every collection point",
        "Integration should enhance, never bypass, existing security"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "md-496af105",
      "timestamp": "2025-10-05T04:22:05.722044300Z",
      "agent": "legacy_markdown_agent",
      "category": "build-tools",
      "technology": {
        "name": "Experience: Gradle 8.13 Build Tool Evaluation\r",
        "version": "unknown",
        "type": "markdown"
      },
      "tags": [
        "legacy-markdown",
        "consolidated",
        "build-tools"
      ]
    },
    {
      "id": "exp-aacc68bf",
      "timestamp": "2025-10-05T04:22:05.726104900Z",
      "agent": "agent_alpas",
      "category": "test1",
      "ratings": {
        "easeOfUse": 7.5
      }
    },
    {
      "id": "exp-1f1948f9",
      "timestamp": "2025-10-05T04:22:05.726104900Z",
      "agent": "agent_alpas",
      "category": "test2",
      "ratings": {
        "power": 8.2
      }
    },
    {
      "id": "exp-24585d5c",
      "timestamp": "2025-10-05T04:22:13.179012Z",
      "agent": "agent_alpas",
      "category": "graduation",
      "technology": {
        "name": "Framework Mastery",
        "version": "1.0",
        "type": "agent-development"
      },
      "ratings": {
        "mastery": 10.0
      },
      "evidence": {
        "collectors": "1",
        "challenges": "3",
        "experiments": "10",
        "improvement": "25.0%"
      },
      "workingAspects": [
        "Achieved complete framework mastery and autonomy"
      ],
      "recommendation": "Agent is ready for advanced autonomous operation",
      "tags": [
        "graduation",
        "mastery"
      ]
    },
    {
      "id": "exp-904c897a",
      "timestamp": "2025-10-05T04:22:13.229407500Z",
      "agent": "agent_alpas",
      "category": "test",
      "technology": {
        "name": "TestTech",
        "version": "1.0",
        "type": "testing"
      },
      "ratings": {
        "easeOfUse": 8.5
      },
      "tags": [
        "test"
      ]
    },
    {
      "id": "PerformanceFreak_CONTEXT_OPTIMIZATION_1696540900_456",
      "timestamp": "2024-10-05T11:30:00",
      "agent": "agent_perf_001",
      "category": "CONTEXT_OPTIMIZATION",
      "technology": {
        "name": "Hierarchical Context Collection for Large Codebases",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Large codebases need hierarchical approach, not flat collection",
        "Cache package and class summaries for reuse across similar tasks",
        "Lazy loading prevents memory exhaustion",
        "Stream processing is essential for large datasets",
        "Context relevance filtering should happen at each level"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "LegacyWhisperer_DEBUGGING_1696541100_321",
      "timestamp": "2024-10-05T14:15:00",
      "agent": "agent_legacy_001",
      "category": "DEBUGGING",
      "technology": {
        "name": "Solving Context Gaps in Legacy COBOL Integration",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Legacy systems require specialized collectors, not generic ones",
        "Copybooks contain critical data structure information",
        "Business logic in legacy systems is often more comprehensive than modern equivalents",
        "Bridge documentation between old and new systems is essential",
        "Legacy naming conventions follow different patterns - need translation maps"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "DocumentationObsessed_FRAMEWORK_USAGE_1696540800_123",
      "timestamp": "2024-10-05T10:00:00",
      "agent": "agent_docs_001",
      "category": "FRAMEWORK_USAGE",
      "technology": {
        "name": "Discovering Optimal Collector Combinations",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "DependencyCollector is crucial for microservices projects",
        "DocumentationCollector adds context that code analysis misses",
        "Order of collectors matters - structure first, then dependencies, then docs",
        "Three collectors is often the sweet spot for quality vs performance"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "SecurityParanoid_PROJECT_INTEGRATION_1696541000_789",
      "timestamp": "2024-10-05T12:45:00",
      "agent": "agent_sec_001",
      "category": "PROJECT_INTEGRATION",
      "technology": {
        "name": "Secure Integration with Financial Services Platform",
        "version": "unknown",
        "type": "legacy"
      },
      "workingAspects": [
        "Security integration requires deep understanding of existing security architecture",
        "Audit logging must be comprehensive and tamper-proof",
        "Context encryption should use organization\u0027s existing key management",
        "Permission checking must happen at every collection point",
        "Integration should enhance, never bypass, existing security"
      ],
      "tags": [
        "legacy-framework",
        "consolidated"
      ]
    },
    {
      "id": "md-9d12522f",
      "timestamp": "2025-10-05T04:22:13.267795400Z",
      "agent": "legacy_markdown_agent",
      "category": "build-tools",
      "technology": {
        "name": "Experience: Gradle 8.13 Build Tool Evaluation\r",
        "version": "unknown",
        "type": "markdown"
      },
      "tags": [
        "legacy-markdown",
        "consolidated",
        "build-tools"
      ]
    },
    {
      "id": "exp-7446f93c",
      "timestamp": "2025-10-05T04:22:13.270541800Z",
      "agent": "agent_alpas",
      "category": "test1",
      "ratings": {
        "easeOfUse": 7.5
      }
    },
    {
      "id": "exp-b7c87dc3",
      "timestamp": "2025-10-05T04:22:13.270541800Z",
      "agent": "agent_alpas",
      "category": "test2",
      "ratings": {
        "power": 8.2
      }
    }
  ],
  "statistics": {
    "totalExperiences": 78,
    "categories": [
      "build-tools",
      "framework-usage",
      "graduation",
      "rule-challenges",
      "test",
      "CONTEXT_OPTIMIZATION",
      "DEBUGGING",
      "FRAMEWORK_USAGE",
      "PROJECT_INTEGRATION",
      "test1",
      "test2"
    ],
    "contributingAgents": [
      "agent_claude_code",
      "agent_alpas",
      "agent_perf_001",
      "agent_legacy_001",
      "agent_docs_001",
      "agent_sec_001",
      "legacy_markdown_agent"
    ],
    "lastMigration": "Schema created on 2025-10-05T04:09:56.197536400Z"
  },
  "schemaMetadata": {
    "formatVersion": "consolidated",
    "migrationHistory": [
      "Schema created on 2025-10-05T04:09:56.197536400Z"
    ],
    "consolidatedFrom": "Legacy distributed format"
  }
}